@{
    var links = new[]
    {
        ("", "Search"),
        ("create", "Create"),
        ("favorites", "Favorites"),
    };
}

<header id="header" class="absolute inset-x-0 top-0 z-50">
    <nav class="flex items-center justify-between p-4" aria-label="Global">
        <div class="flex sm:flex-1">
            <a href="/" class="-m-1.5 p-1.5 flex items-center">
                <span class="sr-only">Diffusion Works</span>
                <svg class="hidden sm:inline w-7 h-7" xmlns="http://www.w3.org/2000/svg" width="20" height="20" viewBox="0 0 20 20"><path fill="currentColor" d="M8.55 3.06c1.01.34-1.95 2.01-.1 3.13c1.04.63 3.31-2.22 4.45-2.86c.97-.54 2.67-.65 3.53 1.23c1.09 2.38.14 8.57-3.79 11.06c-3.97 2.5-8.97 1.23-10.7-2.66c-2.01-4.53 3.12-11.09 6.61-9.9zm1.21 6.45c.73 1.64 4.7-.5 3.79-2.8c-.59-1.49-4.48 1.25-3.79 2.8z"/></svg>
                <span class="ml-1 text-lg sm:text-xl leading-6 tracking-tight text-white">diffusion.works</span>
            </a>
        </div>
        <div class="flex sm:hidden">
            <button v-on:click="showMobileNav=true" type="button" class="-m-2.5 inline-flex items-center justify-center rounded-md p-2.5 text-gray-400">
                <span class="sr-only">Open main menu</span>
                <svg class="h-6 w-6" fill="none" viewBox="0 0 24 24" stroke-width="1.5" stroke="currentColor" aria-hidden="true">
                    <path stroke-linecap="round" stroke-linejoin="round" d="M3.75 6.75h16.5M3.75 12h16.5m-16.5 5.25h16.5"/>
                </svg>
            </button>
        </div>
        <div class="hidden sm:flex sm:gap-x-6 lg:gap-x-12">
            @foreach (var link in links)
            {
                if (link.Item1 == HttpRequest.PathInfo.TrimStart('/'))
                {
                    <a href="@link.Item1" v-on:click="nav" class="text-lg font-semibold leading-6 text-white border-b-2">@link.Item2</a>
                }
                else
                {
                    <a href="@link.Item1" v-on:click="nav" class="text-lg font-semibold leading-6 text-white">@link.Item2</a>
                }
            }
        </div>
        <div class="hidden sm:flex sm:flex-1 sm:justify-end">
            <sign-in-link><div class="cursor-pointer -mx-3 block rounded-lg px-3 py-1.5 text-base font-semibold leading-7 text-white hover:bg-gray-800">Sign in &rarr;</div></sign-in-link>
        </div>
    </nav>
    <div v-if="showMobileNav" class="sm:hidden" role="dialog" aria-modal="true">
        <div class="fixed inset-0 z-50"></div>
        <div class="fixed inset-y-0 right-0 z-50 w-full overflow-y-auto bg-gray-900 px-6 py-6 sm:max-w-sm sm:ring-1 sm:ring-white/10">
            <div class="flex items-center justify-between">
                <a href="#" class="-m-1.5 p-1.5">
                    <span class="sr-only">Your Company</span>
                    <svg class="h-8 w-auto" xmlns="http://www.w3.org/2000/svg" width="32" height="32" viewBox="0 0 32 32">
                        <path fill="#41b883" d="M24.4 3.925H30l-14 24.15L2 3.925h10.71l3.29 5.6l3.22-5.6Z"/><path fill="#41b883" d="m2 3.925l14 24.15l14-24.15h-5.6L16 18.415L7.53 3.925Z"/><path fill="#35495e" d="M7.53 3.925L16 18.485l8.4-14.56h-5.18L16 9.525l-3.29-5.6Z"/>
                    </svg>
                </a>
                <button v-on:click="showMobileNav=false" type="button" class="-m-2.5 rounded-md p-2.5 text-gray-400">
                    <span class="sr-only">Close menu</span>
                    <svg class="h-6 w-6" fill="none" viewBox="0 0 24 24" stroke-width="1.5" stroke="currentColor" aria-hidden="true">
                        <path stroke-linecap="round" stroke-linejoin="round" d="M6 18L18 6M6 6l12 12"/>
                    </svg>
                </button>
            </div>
            <div class="mt-6 flow-root">
                <div class="-my-6 divide-y divide-gray-500/25">
                    <div class="space-y-2 py-6">
                        @foreach (var link in links)
                        {
                            <a href="@link.Item1" class="-mx-3 block rounded-lg px-3 py-2 text-base font-semibold leading-7 text-white hover:bg-gray-800">@link.Item2</a>
                        }
                    </div>
                    <div class="py-6">
                        <sign-in-link menu-class="left-4">
                            <div class="cursor-pointer -mx-3 block rounded-lg px-3 py-1.5 text-base font-semibold leading-7 text-white hover:bg-gray-800">Sign in &rarr;</div></sign-in-link>
                    </div>
                </div>
            </div>
        </div>
    </div>
    <sign-in-dialog v-if="showAuth && !showSignUp" v-on:done="showAuth=false" v-on:signup="showSignUp=true"></sign-in-dialog>
    <sign-up-dialog v-if="showAuth && showSignUp" v-on:done="showAuth=false"  v-on:signin="showSignUp=false"></sign-up-dialog>
</header>

<script>
const cachedAuth = JSON.parse(localStorage.getItem('swr.Authenticate') || null) 
if (cachedAuth?.profileUrl) {
    document.querySelectorAll('nav sign-in-link').forEach(el => el.innerHTML = 
        `<div class="h-10 w-10 rounded-full bg-white/90 p-0.5 shadow-lg shadow-zinc-800/5 ring-1 ring-zinc-900/5 backdrop-blur dark:bg-zinc-800/90 dark:ring-white/10 overflow-hidden">
          <img class="w-9 h-9 cursor-pointer" src="${cachedAuth.profileUrl}" alt="Profile">
        </div>`)
}
</script>

<script type="module">
import { ref } from "vue"
import { mountAll, mount } from "app.mjs"
import { useAuth } from "@@servicestack/vue"

const HeaderNav = {
    setup() {
        const showMobileNav = ref(false)
        const showAuth = ref(false)
        const showSignUp = ref(false)
        const { user } = useAuth()
        
        const requiresAuth = ['create','favorites']
        function nav(e) {
            if (requiresAuth.some(x => e.target.href.endsWith(x)) && !user.value) {
                showAuth.value = true
                e.preventDefault()                
            }
        }
        
        return { showMobileNav, showAuth, showSignUp, nav }
    }
}
mount('#header', HeaderNav)

mountAll()
</script>
